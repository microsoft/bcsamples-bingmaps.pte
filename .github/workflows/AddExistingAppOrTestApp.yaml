name: 'Add existing app or test app'

run-name: "Add existing app or test app in [${{ github.ref_name }}]"

on:
  workflow_dispatch:
    inputs:
      project:
        description: Project name if the repository is setup for multiple projects
        required: false
        default: '.'
      url:
        description: Direct Download Url of .app or .zip file
        required: true
      directCommit:
        description: Direct Commit?
        type: boolean
        default: false
      useGhTokenWorkflow:
        description: Use GhTokenWorkflow for PR/Commit?
        type: boolean
        default: false

permissions:
  actions: read
  contents: write
  id-token: write
  pull-requests: write

defaults:
  run:
    shell: pwsh

env:
  ALGoOrgSettings: ${{ vars.ALGoOrgSettings }}
  ALGoRepoSettings: ${{ vars.ALGoRepoSettings }}

jobs:
  AddExistingAppOrTestApp:
    needs: [ ]
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Dump Workflow Information
        uses: freddydk/AL-Go/Actions/DumpWorkflowInfo@avoidallsecrets
        with:
          shell: pwsh

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Initialize the workflow
        id: init
        uses: freddydk/AL-Go/Actions/WorkflowInitialize@avoidallsecrets
        with:
          shell: pwsh

      - name: Read settings
        uses: freddydk/AL-Go/Actions/ReadSettings@avoidallsecrets
        with:
          shell: pwsh

      - name: Determine secrets
        id: DetermineSecrets
        uses: freddydk/AL-Go/Actions/DetermineSecrets@avoidallsecrets
        with:
          shell: pwsh
          getSecrets: 'TokenForPush'
          useGhTokenWorkflowForPush: '${{ github.event.inputs.useGhTokenWorkflow }}'

      - name: Read secrets
        id: ReadSecrets
        uses: freddydk/AL-Go/Actions/ReadSecrets@avoidallsecrets
        with:
          shell: pwsh
          gitHubSecrets: ${{ format(steps.DetermineSecrets.outputs.formatStr,toJSON(secrets[env.S0]),toJSON(secrets[env.S1]),toJSON(secrets[env.S2]),toJSON(secrets[env.S3]),toJSON(secrets[env.S4]),toJSON(secrets[env.S5]),toJSON(secrets[env.S6]),toJSON(secrets[env.S7]),toJSON(secrets[env.S8]),toJSON(secrets[env.S9]),toJSON(secrets[env.S10]),toJSON(secrets[env.S11]),toJSON(secrets[env.S12]),toJSON(secrets[env.S13]),toJSON(secrets[env.S14]),toJSON(secrets[env.S15]),toJSON(secrets[env.S16]),toJSON(secrets[env.S17]),toJSON(secrets[env.S18]),toJSON(secrets[env.S19]),toJSON(secrets[env.S20]),toJSON(secrets[env.S21]),toJSON(secrets[env.S22]),toJSON(secrets[env.S23]),toJSON(secrets[env.S24]),toJSON(secrets[env.S25]),toJSON(secrets[env.S26]),toJSON(secrets[env.S27]),toJSON(secrets[env.S28]),toJSON(secrets[env.S29]),toJSON(secrets[env.S30]),toJSON(secrets[env.S31])) }}
          getSecrets: 'TokenForPush'
          useGhTokenWorkflowForPush: '${{ github.event.inputs.useGhTokenWorkflow }}'

      - name: Add existing app
        uses: freddydk/AL-Go/Actions/AddExistingApp@avoidallsecrets
        with:
          shell: pwsh
          token: ${{ steps.ReadSecrets.outputs.TokenForPush }}
          project: ${{ github.event.inputs.project }}
          url: ${{ github.event.inputs.url }}
          directCommit: ${{ github.event.inputs.directCommit }}

      - name: Finalize the workflow
        if: always()
        uses: freddydk/AL-Go/Actions/WorkflowPostProcess@avoidallsecrets
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          shell: pwsh
          telemetryScopeJson: ${{ steps.init.outputs.telemetryScopeJson }}
          currentJobContext: ${{ toJson(job) }}
