name: ' Test Next Major'

on:
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * 0'

permissions:
  actions: read
  contents: read
  id-token: write

defaults:
  run:
    shell: pwsh

env:
  workflowDepth: 1
  ALGoOrgSettings: ${{ vars.ALGoOrgSettings }}
  ALGoRepoSettings: ${{ vars.ALGoRepoSettings }}

jobs:
  Initialization:
    needs: [ ]
    runs-on: [ ubuntu-latest ]
    outputs:
      projects: ${{ steps.determineProjectsToBuild.outputs.ProjectsJson }}
      projectDependenciesJson: ${{ steps.determineProjectsToBuild.outputs.ProjectDependenciesJson }}
      buildOrderJson: ${{ steps.determineProjectsToBuild.outputs.BuildOrderJson }}
      workflowDepth: ${{ steps.DetermineWorkflowDepth.outputs.WorkflowDepth }}
      artifactsRetentionDays: ${{ steps.DetermineWorkflowDepth.outputs.ArtifactsRetentionDays }}
      telemetryScopeJson: ${{ steps.init.outputs.telemetryScopeJson }}
    steps:
      - name: Dump Workflow Information
        uses: freddydk/AL-Go/Actions/DumpWorkflowInfo@avoidallsecrets
        with:
          shell: pwsh

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          lfs: true

      - name: Initialize the workflow
        id: init
        uses: freddydk/AL-Go/Actions/WorkflowInitialize@avoidallsecrets
        with:
          shell: pwsh

      - name: Read settings
        id: ReadSettings
        uses: freddydk/AL-Go/Actions/ReadSettings@avoidallsecrets
        with:
          shell: pwsh
          get: useGitSubmodules,shortLivedArtifactsRetentionDays

      - name: Determine submodules secrets
        id: DetermineSecrets
        if: env.useGitSubmodules != 'false' && env.useGitSubmodules != ''
        uses: freddydk/AL-Go/Actions/DetermineSecrets@avoidallsecrets
        with:
          shell: pwsh
          getSecrets: '-gitSubmodulesToken'

      - name: Read submodules token
        id: ReadSubmodulesToken
        if: env.useGitSubmodules != 'false' && env.useGitSubmodules != ''
        uses: freddydk/AL-Go/Actions/ReadSecrets@avoidallsecrets
        with:
          shell: pwsh
          gitHubSecrets: ${{ format(steps.DetermineSecrets.outputs.formatStr,toJSON(secrets[env.S0]),toJSON(secrets[env.S1]),toJSON(secrets[env.S2]),toJSON(secrets[env.S3]),toJSON(secrets[env.S4]),toJSON(secrets[env.S5]),toJSON(secrets[env.S6]),toJSON(secrets[env.S7]),toJSON(secrets[env.S8]),toJSON(secrets[env.S9]),toJSON(secrets[env.S10]),toJSON(secrets[env.S11]),toJSON(secrets[env.S12]),toJSON(secrets[env.S13]),toJSON(secrets[env.S14]),toJSON(secrets[env.S15]),toJSON(secrets[env.S16]),toJSON(secrets[env.S17]),toJSON(secrets[env.S18]),toJSON(secrets[env.S19]),toJSON(secrets[env.S20]),toJSON(secrets[env.S21]),toJSON(secrets[env.S22]),toJSON(secrets[env.S23]),toJSON(secrets[env.S24]),toJSON(secrets[env.S25]),toJSON(secrets[env.S26]),toJSON(secrets[env.S27]),toJSON(secrets[env.S28]),toJSON(secrets[env.S29]),toJSON(secrets[env.S30]),toJSON(secrets[env.S31])) }}
          getSecrets: '-gitSubmodulesToken'

      - name: Checkout Submodules
        if: env.useGitSubmodules != 'false' && env.useGitSubmodules != ''
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          lfs: true
          submodules: ${{ env.useGitSubmodules }}
          token: '${{ fromJson(steps.ReadSubmodulesToken.outputs.Secrets).gitSubmodulesToken }}'

      - name: Determine Workflow Depth
        id: DetermineWorkflowDepth
        run: |
          Add-Content -Encoding UTF8 -Path $env:GITHUB_OUTPUT -Value "WorkflowDepth=$($env:workflowDepth)"
          Add-Content -Encoding UTF8 -Path $env:GITHUB_OUTPUT -Value "ArtifactsRetentionDays=$($env:shortLivedArtifactsRetentionDays)"

      - name: Determine Projects To Build
        id: determineProjectsToBuild
        uses: freddydk/AL-Go/Actions/DetermineProjectsToBuild@avoidallsecrets
        with:
          shell: pwsh
          maxBuildDepth: ${{ env.workflowDepth }}

  Build:
    needs: [ Initialization ]
    if: (!failure()) && (!cancelled()) && fromJson(needs.Initialization.outputs.buildOrderJson)[0].projectsCount > 0
    strategy:
      matrix:
        include: ${{ fromJson(needs.Initialization.outputs.buildOrderJson)[0].buildDimensions }}
      fail-fast: false
    name: Build ${{ matrix.projectName }} (${{ matrix.buildMode }})
    uses: ./.github/workflows/_BuildALGoProject.yaml
    secrets: inherit
    with:
      shell: ${{ matrix.githubRunnerShell }}
      runsOn: ${{ matrix.githubRunner }}
      project: ${{ matrix.project }}
      projectName: ${{ matrix.projectName }}
      buildMode: ${{ matrix.buildMode }}
      projectDependenciesJson: ${{ needs.Initialization.outputs.projectDependenciesJson }}
      secrets: 'licenseFileUrl,codeSignCertificateUrl,*codeSignCertificatePassword,keyVaultCertificateUrl,*keyVaultCertificatePassword,keyVaultClientId,gitHubPackagesContext,applicationInsightsConnectionString'
      artifactsRetentionDays: ${{ fromJson(needs.Initialization.outputs.artifactsRetentionDays) }}
      artifactsNameSuffix: 'NextMajor'

  PostProcess:
    needs: [ Initialization, Build ]
    if: always()
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Finalize the workflow
        id: PostProcess
        uses: freddydk/AL-Go/Actions/WorkflowPostProcess@avoidallsecrets
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          shell: pwsh
          telemetryScopeJson: ${{ needs.Initialization.outputs.telemetryScopeJson }}
          currentJobContext: ${{ toJson(job) }}
